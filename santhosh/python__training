1.Write a Python program to count the number of characters in a string.

def count_char(string):
    char_cnt = {}
    for char in string:
        if char in char_cnt:
            char_cnt[char] += 1
        else:
            char_cnt[char] = 1
    return char_cnt

sample_string = 'google.com'
result = count_char(sample_string)

print(result)

2. Write a Python program to count the number of strings where the string length is 2 or more and the first and last character are same from a given list of strings. 

words = ['abc', 'xyz', 'aba', '1221']

count = 0
for word in words:
    if len(word) >= 2 and word[0] == word[-1]:
        count += 1

print("Count:", count)

3. Write a Python program to get a string made of the first 2 and the last 2 chars from a given a string. If the string length is less than 2, return instead the empty string

def first_last_2_chars(s):
    if len(s) < 2:
        return ''
    return s[:2] + s[-2:]


print(first_last_2_chars("spring"))  
print(first_last_2_chars("a"))       
print(first_last_2_chars("ab"))      


4 .Write a Python program to get a list, sorted in increasing order by the last element in each tuple from a given list of non-empty tuples. Go to the editor

def sort_by_last(tuples):
    return sorted(tuples, key=lambda x: x[-1])


sample_list = [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]
sorted_list = sort_by_last(sample_list)
print("Expected Result:", sorted_list)


5. Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string is already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged

def add_ing_or_ly(word):
    if len(word) < 3:
        return word
    elif word.endswith("ing"):
        return word + "ly"
    else:
        return word + "ing"

print(add_ing_or_ly("play"))     
print(add_ing_or_ly("playing"))  
print(add_ing_or_ly("go"))       


